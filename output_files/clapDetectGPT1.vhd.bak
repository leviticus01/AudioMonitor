library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity clap_detector is
    Port (
        clk : in std_logic;
        sound_in : in std_logic;
        clap_detected : out std_logic
    );
end clap_detector;

architecture Behavioral of clap_detector is
    -- Constants
    constant THRESHOLD : integer := 10000;  -- Adjust as needed for your microphone

    -- Signals
    signal sound_buffer : std_logic_vector(0 to 8191);
    signal buffer_index : integer range 0 to 8191 := 0;
    signal sound_sum : integer := 0;
    signal last_sum : integer := 0;
    signal clap_flag : boolean := false;

begin
    -- Shift new sound sample into the buffer every clock cycle
    process (clk)
    begin
        if rising_edge(clk) then
            sound_buffer(buffer_index) <= sound_in;
            buffer_index <= buffer_index + 1;
            if buffer_index = 8192 then
                buffer_index <= 0;
            end if;
        end if;
    end process;

    -- Calculate the sum of the sound samples in the buffer
    process (clk)
    begin
        if rising_edge(clk) then
            sound_sum <= sound_sum - unsigned(sound_buffer(buffer_index)) + unsigned(sound
